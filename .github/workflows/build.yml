# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on:
  push:
    paths:
      - 'src/**'
      - '*.gradle.kts'
      - 'gradle.properties.kts'
      - 'libs.versions.toml'
      - 'gradlew*'
      - 'gradle/**'
      - '.github/**'
  pull_request:

jobs:
  build:
    name: Build

    runs-on: ubuntu-latest

    steps:
      - name: ✨ Checkout repository
        uses: actions/checkout@v2

      - name: 🔧 Ensure gradlew is executable
        run: chmod +x gradlew

      - name: 🛂 Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: 🏗 Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: temurin

      - name: 📷 Begin Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 🔨 Build artifacts
        run: gradle build

      - name: 📦 Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: '**/build/libs'

      - name: 🧨 Cleanup Gradle cache
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
